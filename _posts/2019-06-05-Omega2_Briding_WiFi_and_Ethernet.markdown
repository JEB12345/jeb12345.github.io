---
layout: post
title:  "Omega2 Bridging WiFi and Ethernet"
date:   2019-06-05 10:34:27 -0600
tags: SBv2 Omega2
---
> If you have not done so, you need to have the SBv2 custom image loaded onto you Omega2 board. Or at the very least, an image with <b>relayd</b> installed.
You can find instructions on compiling and loading the custom image [here][Omega2_Image].

> Note that these configurations might already be applied to your system if a custom version of our firmware is / was already installed on the Omega2 board. Check the network and wireless files on you system against the final version in this tutorial.

We will be editing the Omega2's configuration files to enable briding between the WiFi and ethernet port.
The files we will be editing are `network` and `wireless` located in `/etc/config/`.

> Please refer to [Onion's Omega2][Onion_Docs] docs for how to connect to your Omega2 board, commands, and features. I would recommend you connect to the Omega2 through the Command Line interface.

### Network File
`/etc/config/network`

An unmodified network file should look something like this:
![original network](/assets/img/network_original.png "original network file")

Leave the `'loopback'` and `'globals'` configurations and change the rest of the file to look something like this:
![modified network](/assets/img/network_modified.png "modified network file")

> Note that you might need to change your `gateway`, `dns` and `ipaddr` settings to match your network's settings.
> Also, the `option hostname "Omega-"` might have a 4 character string. No need to delete it like in the image above.

Here are the configurations if you feel like copy and pasting them into your file:
```bash
config interface 'lan'
        option ifname 'eth0'
        option proto 'static'
        option gateway '192.168.0.1' # Should be your network's default Gateway  
        option dns '192.168.0.1' # Should be your network's default Gateway

config interface 'wwan'
        option ifname 'apcli0'
        option proto 'dhcp'
        option hostname 'Omega-'

config interface 'stabridge'
        option proto 'relay'
        option network 'lan wwan'
        option ipaddr '192.168.0.140' #TODO: check if this needs to change for each Omega2
```

### Wireless File (optional)

`/etc/config/wireless`

An unmodified wireless file should look something like this:
![original wireless](/assets/img/wireless_original.png "original wireless file")

If you already connected your Omega2 board to a network, then your `'sta'` section might already be pre-populated with your network settings.

If not, then populate your netowrk settings (key and ssid) as well as make sure you change

`option disable '1'` to `option disable '0'`.

Your new wireless file should look something like this:
![modified wireless](/assets/img/wireless_modified.png "modified wireless file")

> Note the `config wif-config` sections are usually auto generated by the wifi manager. So you might have one or more of these for each different WiFi network you have connected with your Omega2 board.

### Enable Relayd
Once you have modified the `network` and `wireless` files, relayd needs to be enabled.
```bash
$ /etc/init.d/relayd enabled
```

This should setup relayd to bridge your WiFi and ethernet port.

### Enable dnsmasq
Now you should make sure dnsmasq is enabled
```bash
$ /etc/init.d/dnsmasq enabled
```

### Disable Firewall
Once relayd is setup and we have a bridge between our WiFi and ethernet, Hebi feedback messages might not be working. This is due to the Omega2's firewall blocking traffic.
The easiest way to solve this is to disable the firewall all together.

The firmware's startup scripts are located in `/etc/init.d/` and there should be file named `firewall`.
Disable this file using the command below:
```bash
$ /etc/init.d/firewall disable
```

Finally, add these lines to `/etc/rc.local` between the instuctions at the top and `exit 0`
```bash
### Start dnsmasq on bootup
/etc/init.d/dnsmasq start
/etc/init.d/firewall stop
/etc/init.d/dnsmasq restart
```


Now if you reboot the Omega2 board, it should startup and allow for Hebi's feedback messages to transfer over the network.

> Note: The feedback messages will take approximately 85 seconds (or the time for all startup scripts to finish) before they are recognized on the network. So be patient on initial boot up.

[Omega2_Image]: {% post_url 2019-06-04-Omega2_Docker_and_Image_Creation %}
[Onion_Docs]: https://docs.onion.io/omega2-docs/
